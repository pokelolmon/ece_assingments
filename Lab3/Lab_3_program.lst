


ARM Macro Assembler    Page 1 


    1 00000000         ; ECE-222 Lab ... Winter 2013 term 
    2 00000000         ; Lab 3 sample code 
    3 00000000                 THUMB                        ; Thumb instruction
                                                             set 
    4 00000000                 AREA             My_code, CODE, READONLY
    5 00000000                 EXPORT           __MAIN
    6 00000000                 EXPORT           EINT3_IRQHandler
    7 00000000         
    8 00000000                 ENTRY
    9 00000000         __MAIN
   10 00000000         
   11 00000000         ; The following lines are similar to Lab-1 but use a def
                       ined address to make it easier.
   12 00000000         ; They just turn off all LEDs 
   13 00000000 F8DF A12C       LDR              R10, =LED_BASE_ADR ; R10 is a p
                                                            ermenant pointer to
                                                             the base address f
                                                            or the LEDs, offset
                                                             of 0x20 and 0x40 f
                                                            or the ports
   14 00000004         
   15 00000004 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   16 00000008 F8CA 3020       STR              R3, [r10, #0x20]
   17 0000000C F04F 037C       MOV              R3, #0x0000007C
   18 00000010 F8CA 3040       STR              R3, [R10, #0x40] ; Turn off fiv
                                                            e LEDs on port 2 
   19 00000014 F04F 0400       MOV              R4, #0
   20 00000018 F04F 0000       MOV              R0, #0
   21 0000001C F04F 0500       MOV              R5, #0
   22 00000020 F04F 0700       MOV              R7, #0
   23 00000024 F04F 0800       MOV              R8, #0
   24 00000028 F04F 0C00       MOV              R12, #0
   25 0000002C         
   26 0000002C         ;COUNTER   BL   DISPLAY_NUM
   27 0000002C         ;    B   COUNTER
   28 0000002C         
   29 0000002C         ; This line is very important in your main program
   30 0000002C         ; Initializes R11 to a 16-bit non-zero value and NOTHING
                        else can write to R11 !!
   31 0000002C F64A 3BCD       MOV              R11, #0xABCD ; Init the random 
                                                            number generator wi
                                                            th a non-zero numbe
                                                            r
   32 00000030 F000 F857 
                       loop    BL               RandomNum
   33 00000034         
   34 00000034         ;-------------------------------------------------------
                       -------------------------
   35 00000034 4658            MOV              R0, R11     ; delay R11 (random
                                                             number) * 0.1ms
   36 00000036 F000 F870       BL               DELAY
   37 0000003A F04F 4710       MOV              R7, #0x90000000 ; turn light on
                                                            
   38 0000003E F8CA 7020       STR              R7, [R10, #0x20]
   39 00000042 F04F 0900       MOV              R9, #0      ;initiate counter
   40 00000046         
   41 00000046 4E3B    POLL    LDR              R6, =FIO2PIN ; check input
   42 00000048 6836            LDR              R6, [R6]



ARM Macro Assembler    Page 2 


   43 0000004A         
   44 0000004A EA4F 2696       LSR              R6, #10     ; put 10th bit of R
                                                            6 into R8
   45 0000004E F366 0800       BFI              R8, R6, #0, #1
   46 00000052         
   47 00000052 F04F 0001       MOV              R0, #1      ; 0.1 ms delay
   48 00000056 F000 F860       BL               DELAY
   49 0000005A F109 0901       ADD              R9, #1      ; increase counter
   50 0000005E         
   51 0000005E F098 0F00       TEQ              R8, #0      ; when INT0 is pres
                                                            sed, 10th bit becom
                                                            es 0
   52 00000062 D1F0            BNE              POLL
   53 00000064         
   54 00000064 F04F 4730       MOV              R7, #0xB0000000 
                                                            ; turn light off
   55 00000068 F8CA 7020       STR              R7, [R10, #0x20]
   56 0000006C         
   57 0000006C 46C8            MOV              R8, R9      ; put counter into 
                                                            register 8 for late
                                                            r use when displyin
                                                            g time again
   58 0000006E         
   59 0000006E 46C1    RESET   MOV              R9, R8
   60 00000070         
   61 00000070 F04F 0704       MOV              R7, #4      ; counter to loop 4
                                                             times to go throug
                                                            h all 32 bits
   62 00000074         
   63 00000074 F04F 0300 
                       SHOW_TIME
                               MOV              R3, #0
   64 00000078 F369 0307       BFI              R3, R9, #0, #8 ; take 8 bits fr
                                                            om the right
   65 0000007C EA4F 2919       LSR              R9, #8
   66 00000080 F000 F80E       BL               DISPLAY_NUM ; display
   67 00000084 F644 6020       MOV              R0, #0x4E20
   68 00000088 F000 F847       BL               DELAY       ; delay
   69 0000008C 3F01            SUBS             R7, #1
   70 0000008E F097 0F00       TEQ              R7, #0
   71 00000092 D1EF            BNE              SHOW_TIME
   72 00000094         
   73 00000094 F247 5030       MOV              R0, #0x7530 ; extra 3s delay fo
                                                            r a total of 5s
   74 00000098 F000 F83F       BL               DELAY
   75 0000009C         
   76 0000009C E7E7            B                RESET       ; put reaction time
                                                             back into R9, disp
                                                            lay time again
   77 0000009E E7C7            B                loop
   78 000000A0         ;-------------------------------------------------------
                       ----------------------------
   79 000000A0         
   80 000000A0         ;
   81 000000A0         ; Display the number in R3 onto the 8 LEDs
   82 000000A0 B506    DISPLAY_NUM
                               STMFD            R13!,{R1, R2, R14}
   83 000000A2         
   84 000000A2         ; Usefull commaands:  RBIT (reverse bits), BFC (bit fiel



ARM Macro Assembler    Page 3 


                       d clear), LSR & LSL to shift bits left and right, ORR & 
                       AND and EOR for bitwise operations
   85 000000A2         
   86 000000A2         
   87 000000A2         ;-------------------------------------------------------
                       -------------------------    
   88 000000A2 F04F 0600       MOV              R6, #0
   89 000000A6         
   90 000000A6         
   91 000000A6         ;loop3   MOV   R3, R6
   92 000000A6         
   93 000000A6 F04F 0500       MOV              R5, #0      ; clear R5
   94 000000AA F363 0504       BFI              R5, R3, #0, #5 ; 5 bits to be d
                                                            isplayed on port 2
   95 000000AE FA95 F5A5       RBIT             R5, R5      ; bits are reversed
                                                             on port 2
   96 000000B2 EA4F 6555       LSR              R5, #25     ; only shift 25 to 
                                                            make room for bit 0
                                                             and bit 1
   97 000000B6 EA4F 1353       LSR              R3, #5      ; bit shift R3 so i
                                                            t contains only the
                                                             3 bits for port 1
   98 000000BA F085 35FF       EOR              R5, #0xFFFFFFFF ; invert bits f
                                                            or port 2, since 0 
                                                            is on and 1 is off
   99 000000BE F8CA 5040       STR              R5, [R10, #0x40] ; display the 
                                                            5 bits to port 2
  100 000000C2         
  101 000000C2 F04F 0500       MOV              R5, #0      ; clear R5
  102 000000C6 F363 0500       BFI              R5, R3, #0, #1 ; make room and 
                                                            insert 'bit 30' of 
                                                            32-bit word  
  103 000000CA EA4F 0343       LSL              R3, #1
  104 000000CE 442B            ADD              R3, R5      ; add previous bit 
                                                            back, now there are
                                                             bits 28-31
  105 000000D0 F363 0503       BFI              R5, R3, #0, #4 ; 3 (4 bits incl
                                                            uding bit 30) bits 
                                                            to be displayed on 
                                                            port 1
  106 000000D4 FA95 F5A5       RBIT             R5, R5      ; port 1 is reverse
                                                            d
  107 000000D8 F085 35FF       EOR              R5, #0xFFFFFFFF ; invert bits f
                                                            or port 1, since 0 
                                                            is on and 1 is off 
                                                             
  108 000000DC F8CA 5020       STR              R5, [R10, #0x20] ; display the 
                                                            3 bits to port 1
  109 000000E0         
  110 000000E0         
  111 000000E0         ;    MOV   R0, #0x03E8
  112 000000E0         ;    BL   DELAY
  113 000000E0         ;    ADD   R6, #1
  114 000000E0         ;    TEQ   R6, #0x100
  115 000000E0         ;    BNE   loop3
  116 000000E0         ;-------------------------------------------------------
                       --------------------------    
  117 000000E0         
  118 000000E0         



ARM Macro Assembler    Page 4 


  119 000000E0 BD06            LDMFD            R13!,{R1, R2, R15}
  120 000000E2         
  121 000000E2         ;
  122 000000E2         ; R11 holds a 16-bit random number via a pseudo-random s
                       equence as per the Linear feedback shift register (Fibon
                       acci) on WikiPedia
  123 000000E2         ; R11 holds a non-zero 16-bit number.  If a zero is fed 
                       in the pseudo-random sequence will stay stuck at 0
  124 000000E2         ; Take as many bits of R11 as you need.  If you take the
                        lowest 4 bits then you get a number between 1 and 15.
  125 000000E2         ;   If you take bits 5..1 you'll get a number between 0 
                       and 15 (assuming you right shift by 1 bit).
  126 000000E2         ;
  127 000000E2         ; R11 MUST be initialized to a non-zero 16-bit value at 
                       the start of the program OR ELSE!
  128 000000E2         ; R11 can be read anywhere in the code but must only be 
                       written to by this subroutine
  129 000000E2 B50E    RandomNum
                               STMFD            R13!,{R1, R2, R3, R14}
  130 000000E4         
  131 000000E4 F40B 4100       AND              R1, R11, #0x8000
  132 000000E8 F40B 5200       AND              R2, R11, #0x2000
  133 000000EC EA4F 0282       LSL              R2, #2
  134 000000F0 EA81 0302       EOR              R3, R1, R2
  135 000000F4 F40B 5180       AND              R1, R11, #0x1000
  136 000000F8 EA4F 01C1       LSL              R1, #3
  137 000000FC EA83 0301       EOR              R3, R3, R1
  138 00000100 F40B 6180       AND              R1, R11, #0x0400
  139 00000104 EA4F 1141       LSL              R1, #5
  140 00000108 EA83 0301       EOR              R3, R3, R1  ; the new bit to go
                                                             into the LSB is pr
                                                            esent
  141 0000010C EA4F 33D3       LSR              R3, #15
  142 00000110 EA4F 0B4B       LSL              R11, #1
  143 00000114 EA4B 0B03       ORR              R11, R11, R3
  144 00000118         
  145 00000118 BD0E            LDMFD            R13!,{R1, R2, R3, R15}
  146 0000011A         
  147 0000011A         
  148 0000011A         
  149 0000011A         
  150 0000011A         
  151 0000011A         
  152 0000011A         ;
  153 0000011A         ;  Delay 0.1ms (100us) * R0 times
  154 0000011A         ;   aim for better than 10% accuracy
  155 0000011A B504    DELAY   STMFD            R13!,{R2, R14}
  156 0000011C         ;
  157 0000011C         ; code to generate a delay of 0.1mS * R0 times
  158 0000011C         ;
  159 0000011C         
  160 0000011C         MultipleDelay
  161 0000011C F090 0F00       TEQ              R0, #0
  162 00000120 F04F 0482       MOV              R4, #130    ;130
  163 00000124         
  164 00000124         loop1
  165 00000124 3C01            SUBS             R4, #1
  166 00000126 D1FD            BNE              loop1
  167 00000128 3801            SUBS             R0, #1



ARM Macro Assembler    Page 5 


  168 0000012A D000            BEQ              exitDelay
  169 0000012C D1F6            BNE              MultipleDelay
  170 0000012E         
  171 0000012E BD04    exitDelay
                               LDMFD            R13!,{R2, R15}
  172 00000130         
  173 00000130         
  174 00000130 2009C000 
                       LED_BASE_ADR
                               EQU              0x2009c000  ; Base address of t
                                                            he memory that cont
                                                            rols the LEDs 
  175 00000130 4002C00C 
                       PINSEL3 EQU              0x4002c00c  ; Address of Pin Se
                                                            lect Register 3 for
                                                             P1[31:16]
  176 00000130 4002C010 
                       PINSEL4 EQU              0x4002c010  ; Address of Pin Se
                                                            lect Register 4 for
                                                             P2[15:0]
  177 00000130 2009C054 
                       FIO2PIN EQU              0x2009c054
  178 00000130         ; Usefull GPIO Registers
  179 00000130         ; FIODIR  - register to set individual pins as input or 
                       output
  180 00000130         ; FIOPIN  - register to read and write pins
  181 00000130         ; FIOSET  - register to set I/O pins to 1 by writing a 1
                       
  182 00000130         ; FIOCLR  - register to clr I/O pins to 0 by writing a 1
                       
  183 00000130         
  184 00000130                 ALIGN
  185 00000130         
  186 00000130                 END
              2009C000 
              2009C054 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=Lab_3_pr
ogram.d -oLab_3_program.o -IC:\Software\Keil\ARM\RV31\INC -IC:\Software\Keil\AR
M\CMSIS\Include -IC:\Software\Keil\ARM\Inc\NXP\LPC17xx --list=Lab_3_program.lst
 Lab_3_program.s
